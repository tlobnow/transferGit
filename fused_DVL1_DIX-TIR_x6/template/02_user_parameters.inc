## Set user parameters for alphafold, common to MSA and prediction jobs

source ~/workingLama/scripts/00_source.inc
source 00_user_parameters.inc

## PATHS ###############################################################
#PYTHON_PATH=/mpcdf/soft/SLE_15/packages/x86_64/alphafold/2.2.0/bin
PYTHON_PATH=~/miniconda3/envs/loadLama/bin
AF_DIR=~/af2complex/src
AF2_DIR=/mpcdf/soft/SLE_15/packages/x86_64/alphafold/2.2.0
DATA_DIR=/raven/ri/public_sequence_data/alphafold2/git-v2.2.0/data/
TARGET_LST_FILE=$LOC_SCRIPTS/myRuns/$FILE/target.lst	# a list of target with stoichiometry
FEA_DIR=$LOC_FEATURES     				# input feature pickle files of individual monomers under $INP_DIR/$monomer
OUT_DIR=~/workingLama/output_files      		# model output files will be under $out_dir/$target

## MSA SCRIPT PATHS ####################################################
MAX_TEMPLATE_DATE=2020-05-15                                    # CASP14 starting date, for a very specific example case from the publication paper
KALIGN=$AF2_DIR/bin/kalign
DOWNLOAD_DIR=$DATA_DIR
TOOL_DIR=$AF2_DIR
FASTA_PATH=$LOC_FASTA/$FILE.fasta
DB_PRESET='reduced_dbs'
uniref90_database_path=$DATA_DIR/uniref90/uniref90.fasta                                  # Uniref90 database for use by JackHMMER
mgnify_database_path=$DATA_DIR/mgnify/mgy_clusters_2018_12.fa                             # MGnify database for use by JackHMMER
uniprot_database_path=$DATA_DIR/uniprot/uniprot.fasta                                     # Uniprot database for use by JackHMMER
bfd_database_path=$DATA_DIR/bfd/bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt  # BFD database for use by HHblits
small_bfd_database_path=$DATA_DIR/small_bfd/bfd-first_non_consensus_sequences.fasta       # Small BFD database for use by JackHMMER
pdb_seqres_database_path=$DATA_DIR/pdb_seqres/pdb_seqres.txt                              # PDB seqres database for use by hmmsearch
uniclust30_database_path=$DATA_DIR/uniclust30/uniclust30_2018_08/uniclust30_2018_08       # Uniclust30 database for use by HHblits
pdb70_database_path=$DATA_DIR/pdb70/pdb70                                                 # PDB70 database for use by HHsearch
template_mmcif_dir=$DATA_DIR/pdb_mmcif/mmcif_files                                        # directory with template mmCIF structures, each named <pdb_id>.cif
obsolete_pdbs_path=$DATA_DIR/pdb_mmcif/obsolete.dat                                       # file mapping obsolete PDB IDs to their replacements

## PRESET SETTINGS #####################################################
### run preset, note this is different from model_preset defined below
### This preset defined the number of recycles, ensembles, MSA cluster sizes (for monomer_ptm models)
#PRESET=economy		#no ensemble, up to 256 MSA clusters, recycling up to 3 rounds;
#PRESET=super		#1 ensemble, up to 512 MSA clusters, recycling up to 20 rounds;
PRESET=super2		#2 ensembles, up to 512 MSA clusters, recycling up to 20 rounds;
#PRESET=genome		#1 ensemble, up to 512 MSA clusters, max number of recycles and ensembles adjusted according to input sequence length;
#PRESET=genome2		#2 ensembles, up to 512 MSA clusters, max number of recycles and ensembles adjusted according to input sequence length;
#PRESET=expert		#similar to super but maintain the same recycle number regardless target size;
#PRESET=casp14		#8 model ensemblings used by DeepMind in CASP14.

## RECYCLING SETTINGS #####################################################
#RECYCLING_SETTING=0     #turn off intermediate recycle output (by setting save_recycled=0) to save memory cost
RECYCLING_SETTING=1	#no recycle info saving
#RECYCLING_SETTING=2	#print metrics of intermediate recycles
#RECYCLING_SETTING=3	#additionally saving pdb structures of all recycles,
#RECYCLING_SETTING=4	#additionally save all results in pickle

## NEURAL NETWORK MODEL(s) ################################################
NEURAL_NETWORK_MODELS=model_1_multimer_v2,model_2_multimer_v2,model_3_multimer_v2,model_4_multimer_v2,model_5_multimer_v2 # Using AF2 multimer v2.2.0
#NEURAL_NETWORK_MODELS=model_1_multimer,model_2_multimer,rmodel_3_multimer,model_4_multimer,model_5_multimer # Using AF2 multimer v2.1.1
#NEURAL_NETWORK_MODELS=model_1_ptm,model_2_ptm,model_3_ptm,model_4_ptm,model_5_ptm # Using AF2 monomer_ptm v2.0.1

## MODEL PRESET ###########################################################
### Choose model_preset from: ['monomer_ptm', 'multimer', 'multimer_np']
### This preset can be applied to both monomeric and multimeric model prediction.
### You need to specify also approriate model names compatible with the model preset you choose.
MODEL_PRESET=multimer_np	#apply multimer DL model to joined monomer features without MSA pairing
#MODEL_PRESET=multimer		#apply multimer DL model to paired MSAs (pre-generated by AlphaFold-Multimer's data pipeline)
#MODEL_PRESET=monomer_ptm	#applying original AF monomer DL model with the capability of predicting TM-score

## MSA PAIRING ############################################################
### Choose the type of msa pairing you want to use 
### 'none' will do no msa_pairing, 'all' will do every possible species pairing as was done in AF-Multimer
MSA_PAIRING=all		#pairing as many as possible, the most dense complex MSAs
#MSA_PAIRING=cyclic	#sequentially pairing the nearest neighbor defined in the stoichoimetry
#MSA_PAIRING=custom	#use a defined list of pairs.
#MSA_PAIRING=none	#no pairing

## FEATURE MODE ###########################################################
### There are three feature_mode to choose from:

FEATURE_MODE='monomer+species'
        ### monomer+species Modified monomer data pipeline to include additionally species information.
        ### We recommend that you use this mode, which enables a flexibility
        ### using either unpaired MSAs or paired MSAs in various paring modes available in AF2Complex v1.3.0.
        ### The monomer features generated with these two monomer modes
        ### can be used to predict arbitrary combinations of the monomers for modeling a multimeric target.
#FEATURE_MODE='monomer'
        ### monomer AF v2.0 data pipeline to generate input features for predicting monomer structures.
        ### The features generated by this option are used by AF2Complex v1.2.2 and below.
#FEATURE_MODE='multimer'
        ### multimer AF v2.1 data pipeline to generate input features for predicting multimer structures.
        ### The multimer features generated by this option can only be
        ### used in combination with the "multimer" model preset.
        ### It is provided such as you can run the official DeepMind's procedure.
        ### Certain AF2Complex features, such as domain cropping, are not supported in this model preset.


# for use with checkpoint_tag that enables checkpoint saving, disabled by default
#CHECKPOINT_TAG=ckpt
